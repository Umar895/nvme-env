#!/usr/bin/env bash

set -e

printf "\n[INFO]  Building SPDK and DPDK ...\n"
cd /root/spdk
./configure --with-rdma && make -j`nproc`

printf "\n[INFO]  Building RocksDB ...\n"
cd /root/rocksdb
make -j`nproc` db_bench SPDK_DIR=/root/spdk
mkdir /usr/local/etc/spdk/
cd /root/spdk
cp etc/spdk/rocksdb.conf.in /usr/local/etc/spdk/rocksdb.conf
scripts/gen_nvme.sh >> /usr/local/etc/spdk/rocksdb.conf

# This is the case when running in the emulation env within image ljishen/qemu-nvme
if [ $# -eq 0 ]; then
    LINUX_SRC=/usr/src/linux
    mkdir -p "$LINUX_SRC"

    # See http://wiki.qemu.org/Documentation/9psetup
    # for details of setting up VirtFS between the guest and host operating systems.
    printf "\n[INFO]  Mount the Linux kernel source on guest to path $LINUX_SRC\n"
    mount -t 9p -o trans=virtio modules_mount "$LINUX_SRC" -oversion=9p2000.L,posixacl,cache=loose

    printf "\n[INFO]  Installing external modules (make modules_install) ...\n"
    make -C "$LINUX_SRC" modules_install

    printf "\n[INFO]  Installing perf ...\n"
    cp -p "$LINUX_SRC"/tools/perf/perf /usr/bin/
else
    if ! hash perf 2>/dev/null; then
        printf "\n[WARNING]  You may need to install perf before using the db_bench script.\n"
    fi
fi

# Make sure you have at least 5GB of available memory allocated for huge pages
NRHUGE=2560 scripts/setup.sh

test/lib/blobfs/mkfs/mkfs /usr/local/etc/spdk/rocksdb.conf Nvme0n1

if [ $# -eq 0 ]; then
    /bin/bash
else
   # Do whatever if the system already configured (with real NVMe device, uio_pci_generic module loaded).
   # Also see: https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1473109
   "$@"
fi
